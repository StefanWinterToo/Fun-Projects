print(content_df)
}
#' @importFrom R6 R6Class
#'
#' @section Methods:
#' \describe{
#'
#' get_bulk_download_links All Links
#'
#' }
#'
#' @export
BulkDownloadsApi <- R6::R6Class(
'BulkDownloadsApi',
public = list(
userAgent = "Swagger-Codegen/1.2.0/r",
apiClient = NULL,
initialize = function(apiClient){
if (!missing(apiClient)) {
self$apiClient <- apiClient
}
else {
self$apiClient <- ApiClient$new()
}
},
get_bulk_download_links = function(opts = list()){
queryParams <- list()
headerParams <- character()
urlPath <- "/bulk_downloads/links"
resp <- self$apiClient$callApi(url = paste0(self$apiClient$basePath, urlPath),
method = "GET",
queryParams = queryParams,
headerParams = headerParams,
body = body)
if (httr::status_code(resp) >= 200 && httr::status_code(resp) <= 299) {
result <- httr::content(resp, "text", encoding = "UTF-8")
if ("ApiResponseBulkDownloadLinks" == "Numeric") {
returnObject <- as.numeric(jsonlite::fromJSON(result))
} else if ("ApiResponseBulkDownloadLinks" == "Integer") {
returnObject <- as.integer(jsonlite::fromJSON(result))
} else if ("ApiResponseBulkDownloadLinks" == "Character") {
returnObject <- gsub("\\\"", "", result)
} else if ("ApiResponseBulkDownloadLinks" == "Logical") {
returnObject <- as.logical(jsonlite::fromJSON(result))
} else {
returnObject <- ApiResponseBulkDownloadLinks$new()
returnObject$fromJSONString(result)
}
Response$new(returnObject, resp)
} else if (httr::status_code(resp) >= 400 && httr::status_code(resp) <= 499) {
result <- jsonlite::fromJSON(httr::content(resp, "text", encoding = "UTF-8"))
Response$new(result, resp)
} else if (httr::status_code(resp) >= 500 && httr::status_code(resp) <= 599) {
result <- httr::content(resp, "text", encoding = "UTF-8")
Response$new(result, resp)
}
}
)
)
BulkDownloadsApi
client <- IntrinioSDK::ApiClient$new()
# Configure API key authorization: ApiKeyAuth
client$configuration$apiKey <- "OjU3N2JhMWI0YTM0MjEzNTZjNDEwNjI0ZGNkOTQ3MGQz"
IntrinioSDK::BulkDownloadsApi$new(client)
aapl <- load_share_based_comp("AAPL", 2010)
aapl
rm(aapl)
return(content_df)
load_share_based_comp <- function(stock_param, year_param){
username <- "stefanwinter@aon.at"
password <- "Kirchbach5%"
key <- "OjU3N2JhMWI0YTM0MjEzNTZjNDEwNjI0ZGNkOTQ3MGQz"
base <- "https://api.intrinio.com/"
endpoint <- "filings"
stock <- as.character(stock_param)
year <- as.character(year_param)
call <- paste0("https://api-v2.intrinio.com/fundamentals/",stock,"-cash_flow_statement-",year,"-FY/reported_financials?api_key=OjU3N2JhMWI0YTM0MjEzNTZjNDEwNjI0ZGNkOTQ3MGQz")
get <- GET(call, type = "basic")
content <- content(get, "text")
content_json <- fromJSON(content, flatten = FALSE)
content_df <- as.data.frame(content_json)
return(content_df)
}
aapl <- load_share_based_comp("AAPL", 2010)
aapl
stock
aapl
view(aapl)
View(aapl)
today()
year()
stock <- "aapl"
call_years(stock, year = 2010){
for(i in year:2019){
print(paste0(stock,";", year))
}
}
call_years(stock, year = 2010){
for(i in year:2019){
print(paste0(stock,";", year))
}
}
print(paste0(stock,";", year))
call_years(stock, year = 2010){
for(i in year:2019){
print(paste0(stock,";", year))
}
}
call_years <- function(stock, year = 2010){
for(i in year:2019){
print(paste0(stock,";", year))
}
}
call_years("goog",2011)
call_years <- function(stock, year = 2010){
for(i in year:2019){
print(paste0(stock,";", i))
}
}
call_years("goog",2011)
call_years("goog")
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
print(name)
}
}
call_years("asdf")
name
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
print(name)
return(name)
}
}
goog
goog <- call_years("goog")
goog
call_years("as")
year
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
print(name)
}
}
call_years(s)
call_years("w")
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
name
}
}
call_years("w")
goog <- call_years("goog")
goog
goog
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
return(name)
}
}
goog <- call_years("goog")
goog
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
return(name)
}
}
goog <- call_years("goog")
goog
goog <- call_years("goog", 2011)
goog
i
call_years <- function(stock, year = 2010){
i
for(i in year:2019){
name <- paste0(stock,";", i)
return(name)
}
}
goog <- call_years("goog", 2011)
goog
for(i in year:2019){
name <- paste0(stock,";", i)
return(name)
}
for(i in year:2019){
name <- paste0(stock,";", i)
print(name)
}
year
2010:2019
year <- 2010
for(i in year:2019){
name <- paste0(stock,";", i)
print(name)
}
for(i in year:2019){
name <- paste0(stock,";", i)
(name)
}
for(i in year:2019){
name <- paste0(stock,";", i)
name
}
goog <- call_years("goog", 2011)
goog
year
rm(i)
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
return(name)
}
}
goog <- call_years("goog", 2011)
goog
goog <- call_years("goog")
goog
for(i in 1:10){print(i)}
call_years <- function(stock, year = 2010){
for(i in year:2019){
name <- paste0(stock,";", i)
print(i)
return(name)
}
}
goog <- call_years("goog")
goog
year:2019
call_years <- function(stock, year = 2010){
for(i in 2010:2019){
name <- paste0(stock,";", i)
print(i)
return(name)
}
}
goog <- call_years("goog")
goog
for(i in 1:10){print i}
for(i in 1:10){print(i)}
for(i in 2010:2019){
name <- paste0(stock,";", i)
print(i)
}
call_years <- function(stock, year = 2010){
for(i in 2010:2019){
name <- paste0(stock,";", i)
print(i)
if(i < year){
return(name)
}
}
}
goog <- call_years("goog")
goog
goog
call_years <- function(stock, year = 2010){
for(i in 2010:2019){
name <- paste0(stock,";", i)
print(i)
if(i <= year){
return(name)
}
}
}
goog <- call_years("goog")
goog
call_years <- function(stock, year = 2010){
for(i in 2010:2019){
name <- paste0(stock,";", i)
print(i)
if(i == 2019){
return(name)
}
}
}
goog <- call_years("goog")
goog
aapl <- data.frame()
aapl
aapl$years <- 2010:2019
aapl
aapl$years <- "year"
aapl
colnames(aapl) <- "year"
colnames(aapl)
aapl <- data.frame()
aapl
aapl$year
str(appl)
str(aapl)
aapl$year
aapl$year <- 0
colnames(load_share_based_comp())
colnames(load_share_based_comp("aapl"))
colnames(load_share_based_comp("aapl", 2019))
(load_share_based_comp("aapl", 2019))
load_share_based_comp("AAPL", "2019")
colnames(load_share_based_comp("AAPL", "2019"))
colnames(load_share_based_comp("AAPL", "2010"))
colnames(load_share_based_comp("MSFT", "2010"))
colnames(load_share_based_comp("MSFT", "2019"))
colnames <- colnames(load_share_based_comp("AAPL", "2019"))
colname
colnames
aapl <- data.frame()
colnames(aapl) <- colnames
aapl <- as.data.frame()
colnames(aapl) <- colnames
aapl <- colnames
aapl
str(aapl)
aapl <- as.data.frame(0)
aapl
aapl <- as.data.frame(row.names = 2)
aapl <- as.data.frame(row.names = "s")
aapl
aapl <- as.data.frame()
aapl
colnames
length(colnames(load_share_based_comp("AAPL", "2010")))
aapl <- as.data.frame(nrow = 0, ncol = length(colnames))
aapl
aapl <- data.frame(nrow = 0, ncol = length(colnames))
aapl
aapl <- as.data.frame(nrow = 0, ncol = length(colnames))
aapl <- new.data.frame(nrow = 0, ncol = length(colnames))
rm(aapl)
library(dplyr)
aapl <- as.data.frame(nrow = 0, ncol = length(colnames))
aapl <- data.frame(nrow = 0, ncol = length(colnames))
aapl
matrix(nrow = 0, ncol = 1)
matrix(nrow = 0, ncol = length(colnames))
aapl <- data.frame(matrix(nrow = 0, ncol = length(colnames)))
aapl
colnames(aapl) <- colnames
aapl
str(aapl)
aapl$fundamental.company.cik
aapl %>% mutate("year")
aapl <- aapl %>% mutate("year")
aapl
x1 <- load_share_based_comp("AAPL", 2018)
x2
x1
x2 <- load_share_based_comp("AAPL", 2019)
x2
aapl <- append(x1, x2)
aapl
class(x1)
x1
rbind(x1,x2)
row.names(x1)
row.names(x2)
x1
length(x1)
length(x2)
nrow(x1)
nrow(x2)
rbind(x1, x2)
bind_rows(x1, x2)
str(x1)
View(x1)
x1$reported_financials.dimensions
x1
str(x1)
unlist(x1)
str(x1)
x1$reported_financials.xbrl_tag
View(x1$reported_financials.xbrl_tag)
str(x1)
x1$reported_financials.xbrl_tag$name
x1$reported_financials.xbrl_tag <- x1$reported_financials.xbrl_tag$name
x1
str(x1)
x1$reported_financials.xbrl_tag
class(x1$reported_financials.xbrl_tag)
str(x1$reported_financials.xbrl_tag)
View(x1$reported_financials.xbrl_tag)
View(x1)
View(x1$reported_financials.xbrl_tag)
unlist(x1$reported_financials.xbrl_tag)
str(x1)
x1$reported_financials.dimensions
x2
x2[3]
x2[3,]
x1 <- load_share_based_comp("AAPL", 2018)
abind::abind(x1, x2)
x1$reported_financials.xbrl_tag$name
x1$reported_financials.xbrl_tag
rbind(x1, x2)
rbind(1,2)
bind_rows(x1, x2)
class(x1)
x1
x2
rbind(x1, x2)
str(x1)
str(x1, max.level = 1)
str(x1, max.level = 3)
str(x1, max.level = 3, list.len = 4)
file <- read.csv("/Users/stefanwinter/Documents/FindStox/Git/WuÌˆrfeln/data/results.csv")
file
str(file)
ggplot(data = file) +
geom_bar(fill = file$Name)
library(ggplot2)
ggplot(data = file) +
geom_bar(fill = file$Name)
ggplot(data = file) +
geom_bar(fill = file$Name, aes(x = file$Face))
ggplot(data = file) +
geom_bar(aes(x = file$Face))
ggplot(data = file) +
geom_bar(aes(x = file$Face, fill = file$Name, ))
ggplot(data = file) +
geom_bar(position = "dodge", aes(x = file$Face, fill = file$Name, ))
ggplot(data = file) +
geom_bar(aes(x = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(position = "dodge", aes(x = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(stat = "identity", aes(x = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(stat = "identity", aes(x = file$Face, y = file$Face fill = file$Name))
ggplot(data = file) +
geom_bar(stat = "identity", aes(x = file$Face, y = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(position = "dodge", stat = "identity", aes(x = file$Face, y = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "identity", aes(x = file$Face, y = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "identity", aes(x = file$Face, y = count(file$Face), fill = file$Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = file$Face, y = file$Face, fill = file$Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = file$Face, fill = file$Name))
file <- read.csv("/Users/stefanwinter/Documents/FindStox/Git/WuÌˆrfeln/data/results.csv")
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = file$Face, fill = file$Name))
library(dmm)
unfactor(file$Name)
file$Name
unfactor(file$Face)
str(file)
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = file$Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal()
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(breaks = c(0,1,2,3,4,5,6))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(breaks = c(0,1,2,3,4,5,6), labels = c(0,1,2,3,4,5,6))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(breaks = c(0,1,2,3,4,5,6), labels = c("0","1","2","3","4","5","6"))
scale_x_discrete(breaks = c(1,2,3,4,5,6), labels = c(1","2","3","4","5","6"))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(breaks = c(1,2,3,4,5,6), labels = c("1","2","3","4","5","6"))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(labels = c("1","2","3","4","5","6"))
str(file)
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(labels = c(1 = "1", 2 = "2", 3 = "3", 4 = "4", 5 = "5", 6 = "6"))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(labels = c(1,2,3,4,5,6))
seq(1,6)
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_discrete(breaks = seq(1,6))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
#theme_minimal() +
scale_x_discrete(breaks = seq(1,6))
ggplot(data = file) +
geom_bar(width = .5, position = "dodge", stat = "count", aes(x = Face, fill = Name)) +
theme_minimal() +
scale_x_continuous(breaks = seq(1,6))
)
)
ggsave("/Users/stefanwinter/Documents/FindStox/Git/WuÌˆrfeln/vis.png")
getwd()
setwd("/Users/stefanwinter/Documents/FindStox/Git/WuÌˆrfeln")
ggsave("vis.png")
ggsave("vis.png")
file <- read.csv("/data/results.csv")
file <- read.csv("data/results.csv")
